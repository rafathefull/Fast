/* 
------------------------------------------------------------------------
FASTlib for Clipper, including all source code, examples and any other 
file has been donated to Open Source community

Manu Roibal. Bilbao, May 7 2011

------------------------------------------------------------------------
Please, contact me at	manuroibal@gmail.com
Follow me at Twitter	@manuroibal on Twitter
My Linkedin profile	www.linkedin.com/manuroibal

Or visit my web site at	www.tonsofit.com
------------------------------------------------------------------------
*/


#pragma inline

#include "\libs\clipapi\clipapi.h"


HIDE long TicksInter = 0;
HIDE long TicksIdle  = 0;
HIDE long LapsoInter = 1;
HIDE long LapsoIdle  = 1;
HIDE ITEM codeInter;
HIDE ITEM codeIdle;
HIDE BOOL inInter    = FALSE;
HIDE BOOL inIdle     = FALSE;
HIDE WORD hHandle    = 0;


HIDE long getTicks( void )
  {
  return( *( ( unsigned long * )( 0x0040006CUL ) ) );
  }


HIDE void recIdle( EVENT * event )
  {
  EVALINFO eval;

  if ( event->wMessage == 0x5108 && ! inIdle )
    {
    inIdle = TRUE;
    if ( getTicks() >= ( TicksIdle + LapsoIdle ) || ( getTicks() < TicksIdle ) )
      {
      _evalNew( & eval, codeIdle );
      _itemRelease( _evalLaunch( & eval ) );
      TicksIdle = getTicks();
      }
    inIdle = FALSE;
    }
  else
    TicksIdle = getTicks();
  }


HIDE void recInter()
  {
  EVALINFO eval;

  if ( ! inInter )
    {
    inInter = TRUE;
    if ( getTicks() >= ( TicksInter + LapsoInter ) || ( getTicks() < TicksInter ) )
      {
      _evalNew( & eval, codeInter );
      _itemRelease( _evalLaunch( & eval ) );
      TicksInter = getTicks();
      }
    inInter = FALSE;
    }
  }


CLIPPER DoIdle()
  {
  _fastForce();
  if ( hHandle != 0 )
    {
    _evDeregReceiver( hHandle );
    hHandle = 0;
    }
  codeIdle = _itemParam( 1 );
  if ( _itemType( codeIdle ) == 1024 )
    {
    TicksIdle = getTicks();
    LapsoIdle = _fastMul( _parnl( 2 ), 18 );
    hHandle   = _evRegReceiverFunc( recIdle, 0xFFFF );
    }
  }


CLIPPER DoInterval()
  {
  codeInter = _itemParam( 1 );

  if ( _itemType( codeInter ) == 1024 )
    {
    TicksInter = getTicks();
    LapsoInter = _fastMul( _parnl( 2 ), 18 );
    _evLow( 5, recInter, TRUE );
    }
  else
    _evLow( 5, recInter, FALSE );
  }

