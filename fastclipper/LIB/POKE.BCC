/* 
------------------------------------------------------------------------
FASTlib for Clipper, including all source code, examples and any other 
file has been donated to Open Source community

Manu Roibal. Bilbao, May 7 2011

------------------------------------------------------------------------
Please, contact me at	manuroibal@gmail.com
Follow me at Twitter	@manuroibal on Twitter
My Linkedin profile	www.linkedin.com/manuroibal

Or visit my web site at	www.tonsofit.com
------------------------------------------------------------------------
*/


#pragma inline

#include "\libs\clipapi\clipapi.h"
#include "\clip\bc\include\dos.h"
#include "\libs\clipapi\linker.h"



void _fastPokeB( WORD nSegment, WORD nOffSet, BYTE nValue )
  {
  LPBYTE cBuffer = ExoProtectedPtr( MK_FP( nSegment, nOffSet ), 0x100 );

  _fastForce();
  * cBuffer = nValue;
  ExoFreeSelector( FP_SEG( cBuffer ) );
  }


void _fastPokeW( WORD nSegment, WORD nOffSet, WORD nValue )
  {
  LPWORD cBuffer = ExoProtectedPtr( MK_FP( nSegment, nOffSet ), 0x100 );

  * cBuffer = nValue;
  ExoFreeSelector( FP_SEG( cBuffer ) );
  }


BYTE _fastPeekB( WORD nSegment, WORD nOffSet )
  {
  LPBYTE cBuffer = ExoProtectedPtr( MK_FP( nSegment, nOffSet ), 0x100 );
  BYTE   nValue  = * cBuffer;

  ExoFreeSelector( FP_SEG( cBuffer ) );
  return( nValue );
  }


WORD _fastPeekW( WORD nSegment, WORD nOffSet )
  {
  LPWORD cBuffer = ExoProtectedPtr( MK_FP( nSegment, nOffSet ), 0x100 );
  WORD   nValue  = * cBuffer;

  ExoFreeSelector( FP_SEG( cBuffer ) );
  return( nValue );
  }


CLIPPER Pokeb()
  {
  _fastPokeB( _parni( 1 ), _parni( 2 ), (BYTE)_parni( 3 ) );
  }


CLIPPER Pokew()
  {
  _fastPokeW( _parni( 1 ), _parni( 2 ), _parni( 3 ) );
  }


CLIPPER Peekb()
  {
  _retni( (WORD)_fastPeekB( _parni( 1 ), _parni( 2 ) ) );
  }


CLIPPER Peekw()
  {
  _retni( _fastPeekW( _parni( 1 ), _parni( 2 ) ) );
  }



